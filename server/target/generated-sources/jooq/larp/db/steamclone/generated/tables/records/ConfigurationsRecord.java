/*
 * This file is generated by jOOQ.
 */
package larp.db.steamclone.generated.tables.records;


import larp.db.steamclone.generated.tables.Configurations;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConfigurationsRecord extends UpdatableRecordImpl<ConfigurationsRecord> implements Record7<Integer, String, String, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>steamclone.Configurations.configurationID</code>.
     */
    public void setConfigurationid(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>steamclone.Configurations.configurationID</code>.
     */
    public Integer getConfigurationid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>steamclone.Configurations.minRequirementPC</code>.
     */
    public void setMinrequirementpc(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>steamclone.Configurations.minRequirementPC</code>.
     */
    public String getMinrequirementpc() {
        return (String) get(1);
    }

    /**
     * Setter for <code>steamclone.Configurations.recRequirementPC</code>.
     */
    public void setRecrequirementpc(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>steamclone.Configurations.recRequirementPC</code>.
     */
    public String getRecrequirementpc() {
        return (String) get(2);
    }

    /**
     * Setter for <code>steamclone.Configurations.minRequirementMac</code>.
     */
    public void setMinrequirementmac(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>steamclone.Configurations.minRequirementMac</code>.
     */
    public String getMinrequirementmac() {
        return (String) get(3);
    }

    /**
     * Setter for <code>steamclone.Configurations.recRequirementMac</code>.
     */
    public void setRecrequirementmac(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>steamclone.Configurations.recRequirementMac</code>.
     */
    public String getRecrequirementmac() {
        return (String) get(4);
    }

    /**
     * Setter for <code>steamclone.Configurations.minRequirementLinux</code>.
     */
    public void setMinrequirementlinux(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>steamclone.Configurations.minRequirementLinux</code>.
     */
    public String getMinrequirementlinux() {
        return (String) get(5);
    }

    /**
     * Setter for <code>steamclone.Configurations.recRequirementLinux</code>.
     */
    public void setRecrequirementlinux(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>steamclone.Configurations.recRequirementLinux</code>.
     */
    public String getRecrequirementlinux() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, String, String, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, String, String, String, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Configurations.CONFIGURATIONS.CONFIGURATIONID;
    }

    @Override
    public Field<String> field2() {
        return Configurations.CONFIGURATIONS.MINREQUIREMENTPC;
    }

    @Override
    public Field<String> field3() {
        return Configurations.CONFIGURATIONS.RECREQUIREMENTPC;
    }

    @Override
    public Field<String> field4() {
        return Configurations.CONFIGURATIONS.MINREQUIREMENTMAC;
    }

    @Override
    public Field<String> field5() {
        return Configurations.CONFIGURATIONS.RECREQUIREMENTMAC;
    }

    @Override
    public Field<String> field6() {
        return Configurations.CONFIGURATIONS.MINREQUIREMENTLINUX;
    }

    @Override
    public Field<String> field7() {
        return Configurations.CONFIGURATIONS.RECREQUIREMENTLINUX;
    }

    @Override
    public Integer component1() {
        return getConfigurationid();
    }

    @Override
    public String component2() {
        return getMinrequirementpc();
    }

    @Override
    public String component3() {
        return getRecrequirementpc();
    }

    @Override
    public String component4() {
        return getMinrequirementmac();
    }

    @Override
    public String component5() {
        return getRecrequirementmac();
    }

    @Override
    public String component6() {
        return getMinrequirementlinux();
    }

    @Override
    public String component7() {
        return getRecrequirementlinux();
    }

    @Override
    public Integer value1() {
        return getConfigurationid();
    }

    @Override
    public String value2() {
        return getMinrequirementpc();
    }

    @Override
    public String value3() {
        return getRecrequirementpc();
    }

    @Override
    public String value4() {
        return getMinrequirementmac();
    }

    @Override
    public String value5() {
        return getRecrequirementmac();
    }

    @Override
    public String value6() {
        return getMinrequirementlinux();
    }

    @Override
    public String value7() {
        return getRecrequirementlinux();
    }

    @Override
    public ConfigurationsRecord value1(Integer value) {
        setConfigurationid(value);
        return this;
    }

    @Override
    public ConfigurationsRecord value2(String value) {
        setMinrequirementpc(value);
        return this;
    }

    @Override
    public ConfigurationsRecord value3(String value) {
        setRecrequirementpc(value);
        return this;
    }

    @Override
    public ConfigurationsRecord value4(String value) {
        setMinrequirementmac(value);
        return this;
    }

    @Override
    public ConfigurationsRecord value5(String value) {
        setRecrequirementmac(value);
        return this;
    }

    @Override
    public ConfigurationsRecord value6(String value) {
        setMinrequirementlinux(value);
        return this;
    }

    @Override
    public ConfigurationsRecord value7(String value) {
        setRecrequirementlinux(value);
        return this;
    }

    @Override
    public ConfigurationsRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConfigurationsRecord
     */
    public ConfigurationsRecord() {
        super(Configurations.CONFIGURATIONS);
    }

    /**
     * Create a detached, initialised ConfigurationsRecord
     */
    public ConfigurationsRecord(Integer configurationid, String minrequirementpc, String recrequirementpc, String minrequirementmac, String recrequirementmac, String minrequirementlinux, String recrequirementlinux) {
        super(Configurations.CONFIGURATIONS);

        setConfigurationid(configurationid);
        setMinrequirementpc(minrequirementpc);
        setRecrequirementpc(recrequirementpc);
        setMinrequirementmac(minrequirementmac);
        setRecrequirementmac(recrequirementmac);
        setMinrequirementlinux(minrequirementlinux);
        setRecrequirementlinux(recrequirementlinux);
        resetChangedOnNotNull();
    }
}
