/*
 * This file is generated by jOOQ.
 */
package larp.db.steamclone.generated.tables.records;


import java.math.BigDecimal;

import larp.db.steamclone.generated.tables.Bookmarks;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookmarksRecord extends UpdatableRecordImpl<BookmarksRecord> implements Record3<String, String, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>steamclone.Bookmarks.username</code>.
     */
    public void setUsername(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>steamclone.Bookmarks.username</code>.
     */
    public String getUsername() {
        return (String) get(0);
    }

    /**
     * Setter for <code>steamclone.Bookmarks.gameName</code>.
     */
    public void setGamename(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>steamclone.Bookmarks.gameName</code>.
     */
    public String getGamename() {
        return (String) get(1);
    }

    /**
     * Setter for <code>steamclone.Bookmarks.minPriceEver</code>.
     */
    public void setMinpriceever(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>steamclone.Bookmarks.minPriceEver</code>.
     */
    public BigDecimal getMinpriceever() {
        return (BigDecimal) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<String, String, BigDecimal> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<String, String, BigDecimal> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Bookmarks.BOOKMARKS.USERNAME;
    }

    @Override
    public Field<String> field2() {
        return Bookmarks.BOOKMARKS.GAMENAME;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Bookmarks.BOOKMARKS.MINPRICEEVER;
    }

    @Override
    public String component1() {
        return getUsername();
    }

    @Override
    public String component2() {
        return getGamename();
    }

    @Override
    public BigDecimal component3() {
        return getMinpriceever();
    }

    @Override
    public String value1() {
        return getUsername();
    }

    @Override
    public String value2() {
        return getGamename();
    }

    @Override
    public BigDecimal value3() {
        return getMinpriceever();
    }

    @Override
    public BookmarksRecord value1(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public BookmarksRecord value2(String value) {
        setGamename(value);
        return this;
    }

    @Override
    public BookmarksRecord value3(BigDecimal value) {
        setMinpriceever(value);
        return this;
    }

    @Override
    public BookmarksRecord values(String value1, String value2, BigDecimal value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookmarksRecord
     */
    public BookmarksRecord() {
        super(Bookmarks.BOOKMARKS);
    }

    /**
     * Create a detached, initialised BookmarksRecord
     */
    public BookmarksRecord(String username, String gamename, BigDecimal minpriceever) {
        super(Bookmarks.BOOKMARKS);

        setUsername(username);
        setGamename(gamename);
        setMinpriceever(minpriceever);
        resetChangedOnNotNull();
    }
}
