/*
 * This file is generated by jOOQ.
 */
package larp.db.steamclone.generated.tables.records;


import larp.db.steamclone.generated.tables.Gamegenre;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GamegenreRecord extends UpdatableRecordImpl<GamegenreRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>steamclone.GameGenre.gameName</code>.
     */
    public void setGamename(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>steamclone.GameGenre.gameName</code>.
     */
    public String getGamename() {
        return (String) get(0);
    }

    /**
     * Setter for <code>steamclone.GameGenre.gameGenre</code>.
     */
    public void setGamegenre(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>steamclone.GameGenre.gameGenre</code>.
     */
    public String getGamegenre() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Gamegenre.GAMEGENRE.GAMENAME;
    }

    @Override
    public Field<String> field2() {
        return Gamegenre.GAMEGENRE.GAMEGENRE_;
    }

    @Override
    public String component1() {
        return getGamename();
    }

    @Override
    public String component2() {
        return getGamegenre();
    }

    @Override
    public String value1() {
        return getGamename();
    }

    @Override
    public String value2() {
        return getGamegenre();
    }

    @Override
    public GamegenreRecord value1(String value) {
        setGamename(value);
        return this;
    }

    @Override
    public GamegenreRecord value2(String value) {
        setGamegenre(value);
        return this;
    }

    @Override
    public GamegenreRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GamegenreRecord
     */
    public GamegenreRecord() {
        super(Gamegenre.GAMEGENRE);
    }

    /**
     * Create a detached, initialised GamegenreRecord
     */
    public GamegenreRecord(String gamename, String gamegenre) {
        super(Gamegenre.GAMEGENRE);

        setGamename(gamename);
        setGamegenre(gamegenre);
        resetChangedOnNotNull();
    }
}
